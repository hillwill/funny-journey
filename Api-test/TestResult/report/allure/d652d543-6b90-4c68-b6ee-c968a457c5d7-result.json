{"name": "分配客户端成功!", "status": "failed", "statusDetails": {"message": "AssertionError: assert False == 'success'\n  +False\n  -'success'", "trace": "login_oldsadmin = <RequestsCookieJar[Cookie(version=0, name='accessToken', value='\"XX8r19eMmZCOpQp/CdJyt7GSm163RnY7j6NJkzDj1WU=\"', port=...rue, secure=True, expires=None, discard=True, comment=None, comment_url=None, rest={'httponly': None}, rfc2109=False)]>\ndisinfo = {'clientIsBuildin': 'false', 'ids': ['f90959140df411eba4c60050568287cb'], 'nodeIp': '10.2.12.75', 'requestId': 'ede218f8f30c11ea82ac0050568287cb', ...}, expected = 'success'\nclient_idSet = 'f90959140df411eba4c60050568287cb'\n\n    @allure.title(\"分配客户端成功!\")\n    @pytest.mark.parametrize(\"disinfo, expected\",\n                             [\n                                 ({\"clientIsBuildin\": \"false\",\n                                   \"nodeIp\": \"10.2.12.75\",\n                                   \"requestId\": \"ede218f8f30c11ea82ac0050568287cb\",\n                                   \"userNames\": [\"wxt\"]}, \"success\"),\n                             ])\n    def test_assign_client(login_oldsadmin, disinfo, expected, client_idSet):\n        file = open('D:\\\\MyProject\\\\Api-test\\\\TestData\\\\config.yaml', encoding='utf-8')\n        res = yaml.load(file, Loader=yaml.FullLoader)\n        url = parse.urljoin(res['base_url'], res['distribution_url'])\n        print(f'url:{url}')\n        header = res['distribution_headers']\n        print(f'header:{header}')\n        method = res['distribution_method']\n        print(f'method:{method}')\n        cookie = login_oldsadmin\n        clientId = [client_idSet]\n        disinfo['ids'] = clientId\n        s = requests.Session()\n        s.mount(url, HTTPAdapter(max_retries=10))\n        response = s.post(url, json=disinfo, headers=header, verify=False, cookies=cookie, timeout=2).json()\n>       assert response['responseData']['isFinished'] == expected\nE       AssertionError: assert False == 'success'\nE         +False\nE         -'success'\n\ntest_wxt05_sadmininit&assign.py:63: AssertionError"}, "parameters": [{"name": "disinfo", "value": "{'clientIsBuildin': 'false', 'nodeIp': '10.2.12.75', 'requestId': 'ede218f8f30c11ea82ac0050568287cb', 'userNames': ['wxt']}"}, {"name": "expected", "value": "'success'"}], "start": 1602663247692, "stop": 1602663248317, "uuid": "e3d1cfca-518b-4a88-8411-96a65c0954c0", "historyId": "4e5d0065299d82b40651c154cec2cc12", "testCaseId": "ed23d98bc1b586911df1353fae601f27", "fullName": "TestCase.test_wxt05_sadmininit&assign#test_assign_client", "labels": [{"name": "parentSuite", "value": "TestCase"}, {"name": "suite", "value": "test_wxt05_sadmininit&assign"}, {"name": "host", "value": "TestDeskV2-055"}, {"name": "thread", "value": "8240-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "TestCase.test_wxt05_sadmininit&assign"}]}