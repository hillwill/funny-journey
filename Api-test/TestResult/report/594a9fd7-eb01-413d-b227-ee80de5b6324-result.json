{"name": "初始化wxt成功!", "status": "failed", "statusDetails": {"message": "AssertionError: assert 'failure' == 'success'\n  - success\n  + failure", "trace": "login_newoperator = <RequestsCookieJar[Cookie(version=0, name='accessToken', value='\"oJqHGL1L+J+IlT+wSPFX6w4rjLoaIHu5fat/HTux0rk=\"', port=...rue, secure=True, expires=None, discard=True, comment=None, comment_url=None, rest={'httponly': None}, rfc2109=False)]>\ninitwxt = {'isEnc': 'true', 'oldUserPass': 'DN5+zryo6mSfoOjYIYKD44PlWtjxaF5YkBZPWQ2XDiJ0zJaLboHnLzKA+nl9feKJjFgK5aGDURI4rHQpU2cf...RZnLK4jGf4tyr5M5BTTnv0JYbCE+L4VZzynlxpmh8eloQYKX9/av3T0cp40xpsBdM=', 'userId': '506c6470ec5911ea8dbd0050568287cb', ...}\nexpected = 'success'\n\n    @allure.title(\"初始化wxt成功!\")\n    @pytest.mark.parametrize(\"initwxt, expected\",\n                             [\n                                 ({\"userId\": \"506c6470ec5911ea8dbd0050568287cb\",\n                                   \"isEnc\": \"true\",\n                                   \"oldUserPass\": \"DN5+zryo6mSfoOjYIYKD44PlWtjxaF5YkBZPWQ2XDiJ0zJaLboHnLzKA+nl9feKJjFgK5aGDURI4rHQpU2cfJSndi/ikG3HSD3vVC1z1v2G+0PF65iWEhfZ8Rm7JRDwyqBBnC8Tclzkm28APmApkR527So0SVY92ay4m/LCL7NI=\",\n                                   \"userPass\": \"LDm5VpovKEISErwLXkd4AheRJ/bQ4j87gqo/QjrOw7Exc0cZLN/+ii1lVwh1rX0zchhlGt85W/s+HF6+uZ5II6vZ8Q3wdaCcYTxXY/xwgiRZnLK4jGf4tyr5M5BTTnv0JYbCE+L4VZzynlxpmh8eloQYKX9/av3T0cp40xpsBdM=\",\n                                   \"repeatUserPass\": \"LDm5VpovKEISErwLXkd4AheRJ/bQ4j87gqo/QjrOw7Exc0cZLN/+ii1lVwh1rX0zchhlGt85W/s+HF6+uZ5II6vZ8Q3wdaCcYTxXY/xwgiRZnLK4jGf4tyr5M5BTTnv0JYbCE+L4VZzynlxpmh8eloQYKX9/av3T0cp40xpsBdM=\"}, \"success\"),\n                             ])\n    \n    def test_init_operator(login_newoperator, initwxt, expected):\n        file = open('D:\\\\MyProject\\\\Api-test\\\\TestData\\\\config.yaml', encoding='utf-8')\n        res = yaml.load(file, Loader=yaml.FullLoader)\n        url = parse.urljoin(res['base_url'], res['init_url'])\n        header = res['init_headers']\n        method = res['init_method']\n        cookie = login_newoperator\n        s = common.Webrequests()\n        response = s.run_main(method, url, initwxt, header, cookie)\n        print(response)\n>       assert response['status'] == expected\nE       AssertionError: assert 'failure' == 'success'\nE         - success\nE         + failure\n\ntest_wxt01_initialize.py:127: AssertionError"}, "parameters": [{"name": "initwxt", "value": "{'userId': '506c6470ec5911ea8dbd0050568287cb', 'isEnc': 'true', 'oldUserPass': 'DN5+zryo6mSfoOjYIYKD44PlWtjxaF5YkBZPWQ2XDiJ0zJaLboHnLzKA+nl9feKJjFgK5aGDURI4rHQpU2cfJSndi/ikG3HSD3vVC1z1v2G+0PF65iWEhfZ8Rm7JRDwyqBBnC8Tclzkm28APmApkR527So0SVY92ay4m/LCL7NI=', 'userPass': 'LDm5VpovKEISErwLXkd4AheRJ/bQ4j87gqo/QjrOw7Exc0cZLN/+ii1lVwh1rX0zchhlGt85W/s+HF6+uZ5II6vZ8Q3wdaCcYTxXY/xwgiRZnLK4jGf4tyr5M5BTTnv0JYbCE+L4VZzynlxpmh8eloQYKX9/av3T0cp40xpsBdM=', 'repeatUserPass': 'LDm5VpovKEISErwLXkd4AheRJ/bQ4j87gqo/QjrOw7Exc0cZLN/+ii1lVwh1rX0zchhlGt85W/s+HF6+uZ5II6vZ8Q3wdaCcYTxXY/xwgiRZnLK4jGf4tyr5M5BTTnv0JYbCE+L4VZzynlxpmh8eloQYKX9/av3T0cp40xpsBdM='}"}, {"name": "expected", "value": "'success'"}], "start": 1599395381362, "stop": 1599395382615, "uuid": "1e89d1d4-a818-4af0-b5f2-6394b6d117ef", "historyId": "a659c112f140071806f279917923c474", "testCaseId": "ee195048b1c240e5a336d2cd635ea86c", "fullName": "TestCase.test_wxt01_initialize#test_init_operator", "labels": [{"name": "parentSuite", "value": "TestCase"}, {"name": "suite", "value": "test_wxt01_initialize"}, {"name": "host", "value": "TestDeskV2-055"}, {"name": "thread", "value": "24508-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "TestCase.test_wxt01_initialize"}]}